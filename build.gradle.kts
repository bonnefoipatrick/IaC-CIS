/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    jacoco
    kotlin("jvm").version("1.4.0")
    kotlin("plugin.spring").version("1.4.0")
    kotlin("plugin.allopen").version("1.4.0")
    kotlin("plugin.jpa").version("1.4.0")
    id("com.adarshr.test-logger") version "2.1.0"
    id("org.jetbrains.dokka") version "0.10.1"
    id("org.sonarqube") version "3.0"

}

allprojects {
    group = "com.cis.iac"
    version = "0.0.1-SNAPSHOT"
    description = "Infra As Code Service"

    repositories {
        jcenter()
        mavenCentral()
    }

}

val jupiterVersion = "5.6.2"
val assertjVersion = "3.16.1"
val arrowVersion = "0.10.5"
val arrowdataVersion = "0.8.2"
val mockitoKotlinVersion = "2.0.0"

subprojects {
    apply(plugin = "jacoco")
    apply(plugin = "com.adarshr.test-logger")
    apply(plugin = "org.jetbrains.kotlin.plugin.spring")
    apply(plugin = "org.jetbrains.kotlin.plugin.allopen")
    apply(plugin = "org.jetbrains.kotlin.plugin.jpa")
    apply(plugin = "org.jetbrains.kotlin.jvm")
    apply(plugin = "org.jetbrains.dokka")

    dependencies {
        implementation(kotlin("stdlib-jdk8"))
        implementation(kotlin("reflect"))
        implementation("io.github.microutils:kotlin-logging:1.6.20")

        implementation("io.arrow-kt:arrow-core:$arrowVersion")
        implementation("io.arrow-kt:arrow-syntax:$arrowVersion")
        implementation("io.arrow-kt:arrow-data:$arrowdataVersion")

        testImplementation("org.assertj:assertj-core:$assertjVersion")
        testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-api:$jupiterVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$jupiterVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-engine:$jupiterVersion")
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_14
        targetCompatibility = JavaVersion.VERSION_14
    }

    configurations {
        testImplementation {
            exclude(group = "junit")
        }
        implementation{

            exclude(module="kotlin-stdlib-jdk7")
        }
    }

    tasks {
        compileKotlin{
            kotlinOptions {
                freeCompilerArgs = listOf("-Xjsr305=strict")
                jvmTarget = "14"
            }
        }

        compileTestKotlin{
            kotlinOptions {
                freeCompilerArgs = listOf("-Xjsr305=strict")
                jvmTarget = "14"
            }
        }

        test {
            useJUnitPlatform()
        }

        dokka{
            outputFormat = "html" //javadoc
            //outputDirectory = "../$buildDir/javadoc"
            //includes = listOf("Module.md")
        }

    }

}

tasks{
    wrapper{
        gradleVersion = "6.6"
    }
}